/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/app_users": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.app_users.id"];
          full_name?: parameters["rowFilter.app_users.full_name"];
          avatar_url?: parameters["rowFilter.app_users.avatar_url"];
          billing_address?: parameters["rowFilter.app_users.billing_address"];
          payment_method?: parameters["rowFilter.app_users.payment_method"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["app_users"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** app_users */
          app_users?: definitions["app_users"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.app_users.id"];
          full_name?: parameters["rowFilter.app_users.full_name"];
          avatar_url?: parameters["rowFilter.app_users.avatar_url"];
          billing_address?: parameters["rowFilter.app_users.billing_address"];
          payment_method?: parameters["rowFilter.app_users.payment_method"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.app_users.id"];
          full_name?: parameters["rowFilter.app_users.full_name"];
          avatar_url?: parameters["rowFilter.app_users.avatar_url"];
          billing_address?: parameters["rowFilter.app_users.billing_address"];
          payment_method?: parameters["rowFilter.app_users.payment_method"];
        };
        body: {
          /** app_users */
          app_users?: definitions["app_users"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/customers": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.customers.id"];
          stripe_customer_id?: parameters["rowFilter.customers.stripe_customer_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["customers"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** customers */
          customers?: definitions["customers"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.customers.id"];
          stripe_customer_id?: parameters["rowFilter.customers.stripe_customer_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.customers.id"];
          stripe_customer_id?: parameters["rowFilter.customers.stripe_customer_id"];
        };
        body: {
          /** customers */
          customers?: definitions["customers"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/jobs": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.jobs.id"];
          user_id?: parameters["rowFilter.jobs.user_id"];
          company_name?: parameters["rowFilter.jobs.company_name"];
          company_email?: parameters["rowFilter.jobs.company_email"];
          company_number?: parameters["rowFilter.jobs.company_number"];
          title?: parameters["rowFilter.jobs.title"];
          description?: parameters["rowFilter.jobs.description"];
          salary_type?: parameters["rowFilter.jobs.salary_type"];
          work_type?: parameters["rowFilter.jobs.work_type"];
          salary_min?: parameters["rowFilter.jobs.salary_min"];
          salary_max?: parameters["rowFilter.jobs.salary_max"];
          created_at?: parameters["rowFilter.jobs.created_at"];
          updated_at?: parameters["rowFilter.jobs.updated_at"];
          expires_on?: parameters["rowFilter.jobs.expires_on"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["jobs"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** jobs */
          jobs?: definitions["jobs"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.jobs.id"];
          user_id?: parameters["rowFilter.jobs.user_id"];
          company_name?: parameters["rowFilter.jobs.company_name"];
          company_email?: parameters["rowFilter.jobs.company_email"];
          company_number?: parameters["rowFilter.jobs.company_number"];
          title?: parameters["rowFilter.jobs.title"];
          description?: parameters["rowFilter.jobs.description"];
          salary_type?: parameters["rowFilter.jobs.salary_type"];
          work_type?: parameters["rowFilter.jobs.work_type"];
          salary_min?: parameters["rowFilter.jobs.salary_min"];
          salary_max?: parameters["rowFilter.jobs.salary_max"];
          created_at?: parameters["rowFilter.jobs.created_at"];
          updated_at?: parameters["rowFilter.jobs.updated_at"];
          expires_on?: parameters["rowFilter.jobs.expires_on"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.jobs.id"];
          user_id?: parameters["rowFilter.jobs.user_id"];
          company_name?: parameters["rowFilter.jobs.company_name"];
          company_email?: parameters["rowFilter.jobs.company_email"];
          company_number?: parameters["rowFilter.jobs.company_number"];
          title?: parameters["rowFilter.jobs.title"];
          description?: parameters["rowFilter.jobs.description"];
          salary_type?: parameters["rowFilter.jobs.salary_type"];
          work_type?: parameters["rowFilter.jobs.work_type"];
          salary_min?: parameters["rowFilter.jobs.salary_min"];
          salary_max?: parameters["rowFilter.jobs.salary_max"];
          created_at?: parameters["rowFilter.jobs.created_at"];
          updated_at?: parameters["rowFilter.jobs.updated_at"];
          expires_on?: parameters["rowFilter.jobs.expires_on"];
        };
        body: {
          /** jobs */
          jobs?: definitions["jobs"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/stripe_prices": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.stripe_prices.id"];
          product_id?: parameters["rowFilter.stripe_prices.product_id"];
          active?: parameters["rowFilter.stripe_prices.active"];
          description?: parameters["rowFilter.stripe_prices.description"];
          unit_amount?: parameters["rowFilter.stripe_prices.unit_amount"];
          currency?: parameters["rowFilter.stripe_prices.currency"];
          type?: parameters["rowFilter.stripe_prices.type"];
          interval?: parameters["rowFilter.stripe_prices.interval"];
          interval_count?: parameters["rowFilter.stripe_prices.interval_count"];
          trial_period_days?: parameters["rowFilter.stripe_prices.trial_period_days"];
          metadata?: parameters["rowFilter.stripe_prices.metadata"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["stripe_prices"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** stripe_prices */
          stripe_prices?: definitions["stripe_prices"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.stripe_prices.id"];
          product_id?: parameters["rowFilter.stripe_prices.product_id"];
          active?: parameters["rowFilter.stripe_prices.active"];
          description?: parameters["rowFilter.stripe_prices.description"];
          unit_amount?: parameters["rowFilter.stripe_prices.unit_amount"];
          currency?: parameters["rowFilter.stripe_prices.currency"];
          type?: parameters["rowFilter.stripe_prices.type"];
          interval?: parameters["rowFilter.stripe_prices.interval"];
          interval_count?: parameters["rowFilter.stripe_prices.interval_count"];
          trial_period_days?: parameters["rowFilter.stripe_prices.trial_period_days"];
          metadata?: parameters["rowFilter.stripe_prices.metadata"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.stripe_prices.id"];
          product_id?: parameters["rowFilter.stripe_prices.product_id"];
          active?: parameters["rowFilter.stripe_prices.active"];
          description?: parameters["rowFilter.stripe_prices.description"];
          unit_amount?: parameters["rowFilter.stripe_prices.unit_amount"];
          currency?: parameters["rowFilter.stripe_prices.currency"];
          type?: parameters["rowFilter.stripe_prices.type"];
          interval?: parameters["rowFilter.stripe_prices.interval"];
          interval_count?: parameters["rowFilter.stripe_prices.interval_count"];
          trial_period_days?: parameters["rowFilter.stripe_prices.trial_period_days"];
          metadata?: parameters["rowFilter.stripe_prices.metadata"];
        };
        body: {
          /** stripe_prices */
          stripe_prices?: definitions["stripe_prices"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/stripe_products": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.stripe_products.id"];
          active?: parameters["rowFilter.stripe_products.active"];
          name?: parameters["rowFilter.stripe_products.name"];
          description?: parameters["rowFilter.stripe_products.description"];
          image?: parameters["rowFilter.stripe_products.image"];
          metadata?: parameters["rowFilter.stripe_products.metadata"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["stripe_products"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** stripe_products */
          stripe_products?: definitions["stripe_products"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.stripe_products.id"];
          active?: parameters["rowFilter.stripe_products.active"];
          name?: parameters["rowFilter.stripe_products.name"];
          description?: parameters["rowFilter.stripe_products.description"];
          image?: parameters["rowFilter.stripe_products.image"];
          metadata?: parameters["rowFilter.stripe_products.metadata"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.stripe_products.id"];
          active?: parameters["rowFilter.stripe_products.active"];
          name?: parameters["rowFilter.stripe_products.name"];
          description?: parameters["rowFilter.stripe_products.description"];
          image?: parameters["rowFilter.stripe_products.image"];
          metadata?: parameters["rowFilter.stripe_products.metadata"];
        };
        body: {
          /** stripe_products */
          stripe_products?: definitions["stripe_products"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/stripe_subscriptions": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.stripe_subscriptions.id"];
          user_id?: parameters["rowFilter.stripe_subscriptions.user_id"];
          status?: parameters["rowFilter.stripe_subscriptions.status"];
          metadata?: parameters["rowFilter.stripe_subscriptions.metadata"];
          price_id?: parameters["rowFilter.stripe_subscriptions.price_id"];
          quantity?: parameters["rowFilter.stripe_subscriptions.quantity"];
          cancel_at_period_end?: parameters["rowFilter.stripe_subscriptions.cancel_at_period_end"];
          created?: parameters["rowFilter.stripe_subscriptions.created"];
          current_period_start?: parameters["rowFilter.stripe_subscriptions.current_period_start"];
          current_period_end?: parameters["rowFilter.stripe_subscriptions.current_period_end"];
          ended_at?: parameters["rowFilter.stripe_subscriptions.ended_at"];
          cancel_at?: parameters["rowFilter.stripe_subscriptions.cancel_at"];
          canceled_at?: parameters["rowFilter.stripe_subscriptions.canceled_at"];
          trial_start?: parameters["rowFilter.stripe_subscriptions.trial_start"];
          trial_end?: parameters["rowFilter.stripe_subscriptions.trial_end"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["stripe_subscriptions"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** stripe_subscriptions */
          stripe_subscriptions?: definitions["stripe_subscriptions"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.stripe_subscriptions.id"];
          user_id?: parameters["rowFilter.stripe_subscriptions.user_id"];
          status?: parameters["rowFilter.stripe_subscriptions.status"];
          metadata?: parameters["rowFilter.stripe_subscriptions.metadata"];
          price_id?: parameters["rowFilter.stripe_subscriptions.price_id"];
          quantity?: parameters["rowFilter.stripe_subscriptions.quantity"];
          cancel_at_period_end?: parameters["rowFilter.stripe_subscriptions.cancel_at_period_end"];
          created?: parameters["rowFilter.stripe_subscriptions.created"];
          current_period_start?: parameters["rowFilter.stripe_subscriptions.current_period_start"];
          current_period_end?: parameters["rowFilter.stripe_subscriptions.current_period_end"];
          ended_at?: parameters["rowFilter.stripe_subscriptions.ended_at"];
          cancel_at?: parameters["rowFilter.stripe_subscriptions.cancel_at"];
          canceled_at?: parameters["rowFilter.stripe_subscriptions.canceled_at"];
          trial_start?: parameters["rowFilter.stripe_subscriptions.trial_start"];
          trial_end?: parameters["rowFilter.stripe_subscriptions.trial_end"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.stripe_subscriptions.id"];
          user_id?: parameters["rowFilter.stripe_subscriptions.user_id"];
          status?: parameters["rowFilter.stripe_subscriptions.status"];
          metadata?: parameters["rowFilter.stripe_subscriptions.metadata"];
          price_id?: parameters["rowFilter.stripe_subscriptions.price_id"];
          quantity?: parameters["rowFilter.stripe_subscriptions.quantity"];
          cancel_at_period_end?: parameters["rowFilter.stripe_subscriptions.cancel_at_period_end"];
          created?: parameters["rowFilter.stripe_subscriptions.created"];
          current_period_start?: parameters["rowFilter.stripe_subscriptions.current_period_start"];
          current_period_end?: parameters["rowFilter.stripe_subscriptions.current_period_end"];
          ended_at?: parameters["rowFilter.stripe_subscriptions.ended_at"];
          cancel_at?: parameters["rowFilter.stripe_subscriptions.cancel_at"];
          canceled_at?: parameters["rowFilter.stripe_subscriptions.canceled_at"];
          trial_start?: parameters["rowFilter.stripe_subscriptions.trial_start"];
          trial_end?: parameters["rowFilter.stripe_subscriptions.trial_end"];
        };
        body: {
          /** stripe_subscriptions */
          stripe_subscriptions?: definitions["stripe_subscriptions"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/rpc/handle_new_user": {
    post: {
      parameters: {
        body: {
          args: { [key: string]: unknown };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/trigger_set_timestamp": {
    post: {
      parameters: {
        body: {
          args: { [key: string]: unknown };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
}

export interface definitions {
  app_users: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    id: string;
    full_name?: string;
    avatar_url?: string;
    billing_address?: string;
    payment_method?: string;
  };
  customers: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    id: string;
    stripe_customer_id?: string;
  };
  jobs: {
    id: number;
    /**
     * Note:
     * This is a Foreign Key to `app_users.id`.<fk table='app_users' column='id'/>
     */
    user_id?: string;
    company_name: string;
    company_email?: string;
    company_number?: string;
    title: string;
    description: string;
    salary_type:
    | "annual_package"
    | "anual_commission"
    | "comission_only"
    | "hourly"
    | "project";
    work_type:
    | "casual"
    | "contract_temp"
    | "full_time"
    | "part_time"
    | "project";
    salary_min?: number;
    salary_max?: number;
    created_at: string;
    updated_at: string;
    expires_on: string;
  };
  stripe_prices: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Note:
     * This is a Foreign Key to `stripe_products.id`.<fk table='stripe_products' column='id'/>
     */
    product_id?: string;
    active?: boolean;
    description?: string;
    unit_amount?: number;
    currency?: string;
    type?: "one_time" | "recurring";
    interval?: "day" | "week" | "month" | "year";
    interval_count?: number;
    trial_period_days?: number;
    metadata?: string;
  };
  stripe_products: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    active?: boolean;
    name?: string;
    description?: string;
    image?: string;
    metadata?: string;
  };
  stripe_subscriptions: {
    id: string;
    /**
     * Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    user_id: string;
    status?:
    | "trialing"
    | "active"
    | "canceled"
    | "incomplete"
    | "incomplete_expired"
    | "past_due"
    | "unpaid";
    metadata?: string;
    /**
     * Note:
     * This is a Foreign Key to `stripe_prices.id`.<fk table='stripe_prices' column='id'/>
     */
    price_id?: string;
    quantity?: number;
    cancel_at_period_end?: boolean;
    created: string;
    current_period_start: string;
    current_period_end: string;
    ended_at?: string;
    cancel_at?: string;
    canceled_at?: string;
    trial_start?: string;
    trial_end?: string;
  };
}

export interface parameters {
  /** Preference */
  preferParams: "params=single-object";
  /** Preference */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /** Preference */
  preferCount: "count=none";
  /** Filtering Columns */
  select: string;
  /** On Conflict */
  on_conflict: string;
  /** Ordering */
  order: string;
  /** Limiting and Pagination */
  range: string;
  /** Limiting and Pagination */
  rangeUnit: string;
  /** Limiting and Pagination */
  offset: string;
  /** Limiting and Pagination */
  limit: string;
  /** app_users */
  "body.app_users": definitions["app_users"];
  "rowFilter.app_users.id": string;
  "rowFilter.app_users.full_name": string;
  "rowFilter.app_users.avatar_url": string;
  "rowFilter.app_users.billing_address": string;
  "rowFilter.app_users.payment_method": string;
  /** customers */
  "body.customers": definitions["customers"];
  "rowFilter.customers.id": string;
  "rowFilter.customers.stripe_customer_id": string;
  /** jobs */
  "body.jobs": definitions["jobs"];
  "rowFilter.jobs.id": string;
  "rowFilter.jobs.user_id": string;
  "rowFilter.jobs.company_name": string;
  "rowFilter.jobs.company_email": string;
  "rowFilter.jobs.company_number": string;
  "rowFilter.jobs.title": string;
  "rowFilter.jobs.description": string;
  "rowFilter.jobs.salary_type": string;
  "rowFilter.jobs.work_type": string;
  "rowFilter.jobs.salary_min": string;
  "rowFilter.jobs.salary_max": string;
  "rowFilter.jobs.created_at": string;
  "rowFilter.jobs.updated_at": string;
  "rowFilter.jobs.expires_on": string;
  /** stripe_prices */
  "body.stripe_prices": definitions["stripe_prices"];
  "rowFilter.stripe_prices.id": string;
  "rowFilter.stripe_prices.product_id": string;
  "rowFilter.stripe_prices.active": string;
  "rowFilter.stripe_prices.description": string;
  "rowFilter.stripe_prices.unit_amount": string;
  "rowFilter.stripe_prices.currency": string;
  "rowFilter.stripe_prices.type": string;
  "rowFilter.stripe_prices.interval": string;
  "rowFilter.stripe_prices.interval_count": string;
  "rowFilter.stripe_prices.trial_period_days": string;
  "rowFilter.stripe_prices.metadata": string;
  /** stripe_products */
  "body.stripe_products": definitions["stripe_products"];
  "rowFilter.stripe_products.id": string;
  "rowFilter.stripe_products.active": string;
  "rowFilter.stripe_products.name": string;
  "rowFilter.stripe_products.description": string;
  "rowFilter.stripe_products.image": string;
  "rowFilter.stripe_products.metadata": string;
  /** stripe_subscriptions */
  "body.stripe_subscriptions": definitions["stripe_subscriptions"];
  "rowFilter.stripe_subscriptions.id": string;
  "rowFilter.stripe_subscriptions.user_id": string;
  "rowFilter.stripe_subscriptions.status": string;
  "rowFilter.stripe_subscriptions.metadata": string;
  "rowFilter.stripe_subscriptions.price_id": string;
  "rowFilter.stripe_subscriptions.quantity": string;
  "rowFilter.stripe_subscriptions.cancel_at_period_end": string;
  "rowFilter.stripe_subscriptions.created": string;
  "rowFilter.stripe_subscriptions.current_period_start": string;
  "rowFilter.stripe_subscriptions.current_period_end": string;
  "rowFilter.stripe_subscriptions.ended_at": string;
  "rowFilter.stripe_subscriptions.cancel_at": string;
  "rowFilter.stripe_subscriptions.canceled_at": string;
  "rowFilter.stripe_subscriptions.trial_start": string;
  "rowFilter.stripe_subscriptions.trial_end": string;
}

export interface operations { }

export interface external { }
